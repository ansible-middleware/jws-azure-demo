---
- name: Create resource group
  azure_rm_resourcegroup:
    name: "{{ item.name }}"
    location: "{{ item.location }}"
  loop: "{{ resource_groups }}"

- name: Create virtual network
  azure_rm_virtualnetwork:
    resource_group: "{{ item.name }}"
    name: "{{ item.virtualnetwork_name }}"
    address_prefixes: "{{ item.address_prefixes }}"
  loop: "{{ resource_groups }}"
  register: created_vn

- name: Add subnet
  azure_rm_subnet:
    resource_group: "{{ item.name }}"
    name: "{{ subnet_name }}"
    virtual_network: "{{ item.virtualnetwork_name }}"
    address_prefix: "{{ item.subnet }}"
  loop: "{{ resource_groups }}"

- name: Create security groups for RG1
  azure_rm_securitygroup:
    resource_group: "{{ resource_groups.0.name }}"
    name: "{{ sg.key }}"
    rules: "{{ sg.value.rules }}"
    tags: "{{ resource_tags }}"
  loop: "{{ security.groups | dict2items }}"
  loop_control:
    loop_var: sg

- name: Create a private DNS zone
  azure.azcollection.azure_rm_privatednszone:
    resource_group: "{{ resource_groups.0.name }}"
    name: "{{ privatednszone }}"

# - name: Update virtual network DNS link
#   azure.azcollection.azure_rm_privatednszonelink:
#     resource_group: "{{ resource_groups.0.name }}"
#     name: "jws-demo_{{ item.state.location }}_dnslink"
#     zone_name: "{{ privatednszone }}"
#     virtual_network: "{{ item.state.id }}"
#     registration_enabled: yes
#     state: present
#   loop: "{{ created_vn.results }}"

- name: Create public IP address for VM's
  azure_rm_publicipaddress:
    resource_group: "{{ item.resourcegroup_name }}"
    allocation_method: Static
    name: "{{ item.name }}-ip"
    domain_name: "{{ item.domain_name | default(omit)}}"
    tags: "{{ resource_tags }}"
  loop: "{{ vm }}"

- name: Create a network interface
  azure_rm_networkinterface:
    name: "{{ item.name }}"
    resource_group: "{{ item.resourcegroup_name }}"
    virtual_network: "jws-demo-{{ item.resourcegroup_location }}-vn"
    subnet_name: "{{subnet_name}}"
    security_group: "{{ item.role }}"
    public_ip_name: "{{ item.name }}-ip"
    tags: "{{ resource_tags }}"
  loop: "{{ vm }}"

- name: Create Virtual Machine
  azure_rm_virtualmachine:
    resource_group: "{{ item.resourcegroup_name }}"
    name: "{{ item.name }}"
    admin_username: "{{ admin_username }}"
    #admin_password: "{{ admin_password }}"
    network_interface_names: "{{ item.name }}"
    ssh_password_enabled: "{{ ssh_pass }}"
    ssh_public_keys:
    - path: "/home/{{ admin_username }}/.ssh/authorized_keys"
      key_data: "{{ lookup('ansible.builtin.file', ssh_key_path) }}"
    vm_size: "{{ vm_size }}"
    tags: "{{ resource_tags | combine( { 'Role': item.role, 'Site': item.site, 'Region': item.resourcegroup_location } ) }}"
    image:
      offer: "{{ offer }}"
      publisher: "{{ publisher }}"
      sku: "{{ sku }}"
      version: "{{ image_version }}"
  loop: "{{ vm }}"
  register: az_instances
  async: 7200
  poll: 0

- name: Wait for instance creation to complete
  async_status:
    jid: "{{ item.ansible_job_id }}"
  register: az_instance_jobs
  until: az_instance_jobs.finished
  retries: 300
  loop: "{{ az_instances.results }}"  

- name: Create a DNS zone
  azure_rm_dnszone:
    resource_group: "{{ item.name }}"
    name: "{{ dns_name }}"
  loop: "{{ resource_groups }}"
